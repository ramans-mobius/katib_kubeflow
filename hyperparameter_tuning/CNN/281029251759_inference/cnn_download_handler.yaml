name: 2 CDN Download Handler Config
description: Downloads handler.py and config.properties files from CDN URLs
inputs:
  - name: handler_url
    type: String
    description: URL to fetch the handler.py file from
  - name: config_url
    type: String
    description: URL to fetch the config.properties file from
outputs:
  - name: handler_file
    type: String
    description: Downloaded handler.py file
  - name: config_file
    type: String
    description: Downloaded config.properties file
implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        set -e
        python3 -m pip install --quiet requests
        python3 -c "
        import sys, os, requests, json, pickle, urllib.parse, io
        
        print('Number of arguments:', len(sys.argv))
        print('Arguments:', sys.argv)
        
        # Get args directly from command line
        handler_url = sys.argv[1]
        config_url = sys.argv[2]
        handler_path = sys.argv[3]
        config_path = sys.argv[4]
        
        print('Starting handler and config download...')
        print(f'handler_url: {handler_url}')
        print(f'config_url: {config_url}')
        
        def download_file(url, output_path, description):
            decoded_url = urllib.parse.unquote(url)
            print(f'Fetching {description} from: {decoded_url}')
            r = requests.get(decoded_url)
            r.raise_for_status()
            os.makedirs(os.path.dirname(output_path) or '.', exist_ok=True)
            with open(output_path, 'wb') as f:
                f.write(r.content)
            print(f'{description} saved to {output_path}')
            return output_path

        # Download files
        download_file(handler_url, handler_path, 'handler.py')
        download_file(config_url, config_path, 'config.properties')

        print('Handler and config files downloaded successfully')
        " "$0" "$1" "$2" "$3"
    args:
      - {inputValue: handler_url}
      - {inputValue: config_url}
      - {outputPath: handler_file}
      - {outputPath: config_file}
