name: CNN Data Preprocessing
description: Universal data preprocessing for CNN models

inputs:
  - name: data_path
    type: String
    description: Path to raw data
    
  - name: dataset_name
    type: String
    description: Name of the dataset
    default: ""
    
  - name: batch_size
    type: Integer
    description: Batch size for data loaders
    default: 64

outputs:
  - name: processed_data_path
    type: string
    description: Path to processed data

implementation:
  container:
    image: nikhilv215/nesy-factory:v18
    command:
    - python3
    - -u
    - -c
    - |
      import os
      import sys
      import argparse
      from pathlib import Path
      
      print("=== CNN DATA PREPROCESSING ===")
      
      parser = argparse.ArgumentParser()
      parser.add_argument("--data_path", type=str, required=True)
      parser.add_argument("--dataset_name", type=str, required=True)
      parser.add_argument("--batch_size", type=int, required=True)
      parser.add_argument("--processed_data_path", type=str, required=True)
      args = parser.parse_args()
      
      print(f"Data path: {args.data_path}")
      print(f"Dataset name: {args.dataset_name}")
      print(f"Batch size: {args.batch_size}")
      
      # Create output directory
      output_path = os.path.join(args.data_path, 'preprocessed')
      Path(output_path).mkdir(parents=True, exist_ok=True)
      
      # Write output
      with open(args.processed_data_path, 'w') as f:
          f.write(output_path)
      
      print(f"Created output path: {output_path}")
      print("=== PREPROCESSING COMPLETED ===")
    
    args:
    - --data_path
    - {inputValue: data_path}
    - --dataset_name
    - {inputValue: dataset_name}
    - --batch_size
    - {inputValue: batch_size}
    - --processed_data_path
    - {outputPath: processed_data_path}
