name: dataset CNN Get Data Through CDN
description: Downloads image dataset from CDN URL
inputs:
  - name: process_data_url
    type: String
    description: URL to fetch the image dataset from
outputs:
  - name: processed_data
    type: Dataset
  - name: config_out
    type: String

implementation:
  container:
    image: python:3.9
    command:
      - sh
      - -c
      - |
        set -e
        python3 -m pip install --quiet requests
        exec "$0" "$@"
      - python3
      - -u
      - -c
      - |
        import argparse, os, requests, json

        parser = argparse.ArgumentParser()
        parser.add_argument('--process_data_url', type=str, required=True)
        parser.add_argument('--processed_data', type=str, required=True)
        parser.add_argument('--config_out', type=str, required=True)
        args = parser.parse_args()

        args.process_data_url = args.process_data_url.replace("$$", "$$$")

        # Download dataset from CDN
        print(f"Fetching dataset from CDN: {args.process_data_url}")
        resp = requests.get(args.process_data_url)
        resp.raise_for_status()

        # Create output directories
        os.makedirs(os.path.dirname(args.processed_data), exist_ok=True)
        os.makedirs(os.path.dirname(args.config_out), exist_ok=True)

        # Save dataset
        with open(args.processed_data, "wb") as f:
            f.write(resp.content)
        print(f"Dataset saved at {args.processed_data}")

        # Create basic config
        config = {
            "dataset_info": {
                "source": args.process_data_url,
                "size_bytes": len(resp.content)
            }
        }
        
        with open(args.config_out, "w") as f:
            json.dump(config, f, indent=2)
        print(f"Config saved at {args.config_out}")

    args:
      - --process_data_url
      - { inputValue: process_data_url }
      - --processed_data
      - { outputPath: processed_data }
      - --config_out
      - { outputPath: config_out }
